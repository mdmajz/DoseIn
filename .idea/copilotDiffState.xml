<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/momentum/dosein/controller/SetReminderController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/momentum/dosein/controller/SetReminderController.java" />
              <option name="originalContent" value="package com.momentum.dosein.controller;&#10;&#10;import com.momentum.dosein.model.MedicineReminder;&#10;import com.momentum.dosein.service.ReminderService;&#10;import com.momentum.dosein.util.Session;&#10;import javafx.event.ActionEvent;&#10;import javafx.event.Event;&#10;import javafx.fxml.FXML;&#10;import javafx.fxml.FXMLLoader;&#10;import javafx.scene.Node;&#10;import javafx.scene.Scene;&#10;import javafx.scene.Parent;&#10;import javafx.scene.control.Alert;&#10;import javafx.scene.control.DatePicker;&#10;import javafx.scene.control.ListView;&#10;import javafx.scene.control.RadioButton;&#10;import javafx.scene.control.ToggleButton;&#10;import javafx.scene.control.Spinner;&#10;import javafx.scene.control.SpinnerValueFactory.IntegerSpinnerValueFactory;&#10;import javafx.scene.control.TextArea;&#10;import javafx.scene.control.TextField;&#10;import javafx.scene.control.Button;&#10;import javafx.scene.layout.HBox;&#10;import java.io.IOException;&#10;import java.time.LocalDate;&#10;import java.time.LocalTime;&#10;import java.time.format.DateTimeFormatter;&#10;&#10;public class SetReminderController {&#10;&#10;    @FXML private TextField    nameField;&#10;    @FXML private DatePicker   startDatePicker, endDatePicker;&#10;    @FXML private Spinner&lt;Integer&gt; hourSpinner, minuteSpinner;&#10;    @FXML private ToggleButton  amRadio, pmRadio;&#10;    @FXML private HBox timeListContainer;&#10;    @FXML private TextField    noteField;&#10;&#10;    private final ReminderService reminderService = new ReminderService();&#10;    private final DateTimeFormatter displayFmt =&#10;            DateTimeFormatter.ofPattern(&quot;h:mm a&quot;);&#10;&#10;    @FXML&#10;    private void initialize() {&#10;        // Make spinners editable so user can type&#10;        hourSpinner.setEditable(true);&#10;        minuteSpinner.setEditable(true);&#10;&#10;        // Spinner ranges&#10;        hourSpinner.setValueFactory(new IntegerSpinnerValueFactory(1, 12, 12));&#10;        minuteSpinner.setValueFactory(new IntegerSpinnerValueFactory(0, 59, 0));&#10;&#10;        // Set date picker format to DD/MM/YYYY and current date prompts&#10;        java.time.format.DateTimeFormatter formatter =&#10;                java.time.format.DateTimeFormatter.ofPattern(&quot;dd/MM/yyyy&quot;);&#10;&#10;        LocalDate today = LocalDate.now();&#10;        LocalDate futureDate = today.plusDays(15); // 15 days from today&#10;&#10;        // Set dynamic prompt text with current dates&#10;        startDatePicker.setPromptText(formatter.format(today));&#10;        endDatePicker.setPromptText(formatter.format(futureDate));&#10;&#10;        startDatePicker.setConverter(new javafx.util.StringConverter&lt;LocalDate&gt;() {&#10;            @Override&#10;            public String toString(LocalDate date) {&#10;                return date != null ? formatter.format(date) : &quot;&quot;;&#10;            }&#10;&#10;            @Override&#10;            public LocalDate fromString(String string) {&#10;                return (string != null &amp;&amp; !string.isEmpty())&#10;                        ? LocalDate.parse(string, formatter) : null;&#10;            }&#10;        });&#10;&#10;        endDatePicker.setConverter(new javafx.util.StringConverter&lt;LocalDate&gt;() {&#10;            @Override&#10;            public String toString(LocalDate date) {&#10;                return date != null ? formatter.format(date) : &quot;&quot;;&#10;            }&#10;&#10;            @Override&#10;            public LocalDate fromString(String string) {&#10;                return (string != null &amp;&amp; !string.isEmpty())&#10;                        ? LocalDate.parse(string, formatter) : null;&#10;            }&#10;        });&#10;&#10;        // Group AM/PM toggles&#10;        var tg = new javafx.scene.control.ToggleGroup();&#10;        amRadio.setToggleGroup(tg);&#10;        pmRadio.setToggleGroup(tg);&#10;        amRadio.setSelected(true);&#10;&#10;        // Set initial AM/PM styling&#10;        updateAmPmStyling();&#10;&#10;        // Add listeners for AM/PM toggle buttons&#10;        amRadio.selectedProperty().addListener((obs, oldVal, newVal) -&gt; {&#10;            if (newVal) updateAmPmStyling();&#10;        });&#10;        pmRadio.selectedProperty().addListener((obs, oldVal, newVal) -&gt; {&#10;            if (newVal) updateAmPmStyling();&#10;        });&#10;    }&#10;&#10;    private void updateAmPmStyling() {&#10;        if (amRadio.isSelected()) {&#10;            amRadio.getStyleClass().add(&quot;am-selected&quot;);&#10;            pmRadio.getStyleClass().remove(&quot;am-selected&quot;);&#10;        } else {&#10;            pmRadio.getStyleClass().add(&quot;am-selected&quot;);&#10;            amRadio.getStyleClass().remove(&quot;am-selected&quot;);&#10;        }&#10;    }&#10;&#10;&#10;&#10;    @FXML&#10;    private void handleAddTime(ActionEvent e) {&#10;        int hour = hourSpinner.getValue() % 12;&#10;        if (pmRadio.isSelected()) hour += 12;&#10;        LocalTime t = LocalTime.of(hour, minuteSpinner.getValue());&#10;        String timeText = t.format(displayFmt);&#10;&#10;        // Check if time already exists&#10;        boolean timeExists = timeListContainer.getChildren().stream()&#10;                .anyMatch(node -&gt; node instanceof Button &amp;&amp; ((Button) node).getText().equals(timeText));&#10;&#10;        if (!timeExists) {&#10;            Button timeButton = new Button(timeText);&#10;            timeButton.getStyleClass().add(&quot;time-button&quot;);&#10;            timeButton.setOnAction(event -&gt; handleTimeButtonClick(timeButton));&#10;            timeListContainer.getChildren().add(timeButton);&#10;        }&#10;    }&#10;&#10;    @FXML&#10;    private void handleRemoveTime(ActionEvent e) {&#10;        // Remove selected time button&#10;        timeListContainer.getChildren().removeIf(node -&gt;&#10;                node instanceof Button &amp;&amp; node.getStyleClass().contains(&quot;selected&quot;));&#10;    }&#10;&#10;    private void handleTimeButtonClick(Button timeButton) {&#10;        // Toggle selection&#10;        if (timeButton.getStyleClass().contains(&quot;selected&quot;)) {&#10;            timeButton.getStyleClass().remove(&quot;selected&quot;);&#10;        } else {&#10;            // Deselect all other buttons&#10;            timeListContainer.getChildren().forEach(node -&gt; {&#10;                if (node instanceof Button) {&#10;                    node.getStyleClass().remove(&quot;selected&quot;);&#10;                }&#10;            });&#10;            // Select this button&#10;            timeButton.getStyleClass().add(&quot;selected&quot;);&#10;        }&#10;    }&#10;&#10;    @FXML&#10;    private void handleSetReminder(ActionEvent e) {&#10;        String name = nameField.getText().trim();&#10;        LocalDate start = startDatePicker.getValue();&#10;        LocalDate end = endDatePicker.getValue();&#10;&#10;        if (name.isEmpty() || timeListContainer.getChildren().isEmpty()) {&#10;            new Alert(Alert.AlertType.WARNING,&#10;                    &quot;Please enter a name and at least one alert time.&quot;)&#10;                    .showAndWait();&#10;            return;&#10;        }&#10;&#10;        if (start == null || end == null) {&#10;            new Alert(Alert.AlertType.WARNING,&#10;                    &quot;Please select both start and end dates.&quot;)&#10;                    .showAndWait();&#10;            return;&#10;        }&#10;&#10;        if (end.isBefore(start)) {&#10;            new Alert(Alert.AlertType.WARNING,&#10;                    &quot;End date cannot be before start date.&quot;)&#10;                    .showAndWait();&#10;            return;&#10;        }&#10;&#10;        String note = noteField.getText().trim();&#10;&#10;        for (javafx.scene.Node node : timeListContainer.getChildren()) {&#10;            if (node instanceof Button) {&#10;                String ts = ((Button) node).getText();&#10;                LocalTime lt = LocalTime.parse(ts, displayFmt);&#10;                MedicineReminder r = new MedicineReminder(name, &quot;&quot;, start, end, lt, note);&#10;                reminderService.addReminder(r);&#10;            }&#10;        }&#10;&#10;        new Alert(Alert.AlertType.INFORMATION,&#10;                &quot;Reminder(s) saved!&quot;).showAndWait();&#10;        navigateToDashboard(e);&#10;    }&#10;&#10;    /** Cancel button → back to Dashboard */&#10;    @FXML&#10;    private void handleCancel(ActionEvent e) {&#10;        navigateToDashboard(e);&#10;    }&#10;&#10;    /** Dashboard nav (button or logo click) → back to Dashboard */&#10;    @FXML&#10;    private void handleDashboard(Event e) {&#10;        navigateToDashboard(e);&#10;    }&#10;&#10;    private void navigateToDashboard(Event event) {&#10;        try {&#10;            Parent dash = FXMLLoader.load(&#10;                    getClass().getResource(&#10;                            &quot;/com/momentum/dosein/fxml/dashboard.fxml&quot;&#10;                    )&#10;            );&#10;            Scene scene = ((Node)event.getSource()).getScene();&#10;            scene.setRoot(dash);&#10;        } catch (IOException ex) {&#10;            ex.printStackTrace();&#10;            new Alert(Alert.AlertType.ERROR,&#10;                    &quot;Could not load Dashboard.&quot;).showAndWait();&#10;        }&#10;    }&#10;&#10;    // Navigation methods for remaining nav buttons:&#10;    @FXML&#10;    private void handleManageSchedule(ActionEvent e) {&#10;        navigate(&quot;/com/momentum/dosein/fxml/manage_schedule.fxml&quot;, e);&#10;    }&#10;&#10;    @FXML&#10;    private void handleDoctorContacts(ActionEvent e) {&#10;        navigate(&quot;/com/momentum/dosein/fxml/doctor_contacts.fxml&quot;, e);&#10;    }&#10;&#10;    @FXML&#10;    private void handleEmergency(ActionEvent e) {&#10;        navigate(&quot;/com/momentum/dosein/fxml/emergency.fxml&quot;, e);&#10;    }&#10;&#10;    @FXML&#10;    private void handleAboutUs(ActionEvent e) {&#10;        navigate(&quot;/com/momentum/dosein/fxml/about_us.fxml&quot;, e);&#10;    }&#10;&#10;    private void navigate(String fxmlPath, ActionEvent e) {&#10;        try {&#10;            Parent page = FXMLLoader.load(getClass().getResource(fxmlPath));&#10;            Scene scene = ((Node) e.getSource()).getScene();&#10;            scene.setRoot(page);&#10;        } catch (IOException ex) {&#10;            ex.printStackTrace();&#10;            new Alert(Alert.AlertType.ERROR, &quot;Could not load page.&quot;).showAndWait();&#10;        }&#10;    }&#10;&#10;    @FXML&#10;    private void handleSignOut(Event e) {&#10;        Session.clear();&#10;        try {&#10;            Parent login = FXMLLoader.load(&#10;                    getClass().getResource(&#10;                            &quot;/com/momentum/dosein/fxml/login.fxml&quot;&#10;                    )&#10;            );&#10;            Scene scene = ((Node)e.getSource()).getScene();&#10;            scene.setRoot(login);&#10;        } catch (IOException ex) {&#10;            ex.printStackTrace();&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.momentum.dosein.controller;&#10;&#10;import com.momentum.dosein.model.MedicineReminder;&#10;import com.momentum.dosein.service.ReminderService;&#10;import com.momentum.dosein.util.Session;&#10;import javafx.event.ActionEvent;&#10;import javafx.event.Event;&#10;import javafx.fxml.FXML;&#10;import javafx.fxml.FXMLLoader;&#10;import javafx.scene.Node;&#10;import javafx.scene.Scene;&#10;import javafx.scene.Parent;&#10;import javafx.scene.control.Alert;&#10;import javafx.scene.control.DatePicker;&#10;import javafx.scene.control.ListView;&#10;import javafx.scene.control.RadioButton;&#10;import javafx.scene.control.ToggleButton;&#10;import javafx.scene.control.Spinner;&#10;import javafx.scene.control.SpinnerValueFactory.IntegerSpinnerValueFactory;&#10;import javafx.scene.control.TextArea;&#10;import javafx.scene.control.TextField;&#10;import javafx.scene.control.Button;&#10;import javafx.scene.layout.HBox;&#10;import javafx.scene.control.Label;&#10;import java.io.IOException;&#10;import java.time.LocalDate;&#10;import java.time.LocalTime;&#10;import java.time.format.DateTimeFormatter;&#10;&#10;public class SetReminderController {&#10;&#10;    @FXML private TextField    nameField;&#10;    @FXML private DatePicker   startDatePicker, endDatePicker;&#10;    @FXML private Spinner&lt;Integer&gt; hourSpinner, minuteSpinner;&#10;    @FXML private ToggleButton  amRadio, pmRadio;&#10;    @FXML private HBox timeListContainer;&#10;    @FXML private TextField    noteField;&#10;&#10;    private final ReminderService reminderService = new ReminderService();&#10;    private final DateTimeFormatter displayFmt =&#10;            DateTimeFormatter.ofPattern(&quot;h:mm a&quot;);&#10;&#10;    private Label timePromptLabel;&#10;&#10;    @FXML&#10;    private void initialize() {&#10;        // Make spinners editable so user can type&#10;        hourSpinner.setEditable(true);&#10;        minuteSpinner.setEditable(true);&#10;&#10;        // Spinner ranges&#10;        hourSpinner.setValueFactory(new IntegerSpinnerValueFactory(1, 12, 12));&#10;        minuteSpinner.setValueFactory(new IntegerSpinnerValueFactory(0, 59, 0));&#10;&#10;        // Set date picker format to DD/MM/YYYY and current date prompts&#10;        java.time.format.DateTimeFormatter formatter =&#10;                java.time.format.DateTimeFormatter.ofPattern(&quot;dd/MM/yyyy&quot;);&#10;&#10;        LocalDate today = LocalDate.now();&#10;        LocalDate futureDate = today.plusDays(15); // 15 days from today&#10;&#10;        // Set dynamic prompt text with current dates&#10;        startDatePicker.setPromptText(formatter.format(today));&#10;        endDatePicker.setPromptText(formatter.format(futureDate));&#10;&#10;        startDatePicker.setConverter(new javafx.util.StringConverter&lt;LocalDate&gt;() {&#10;            @Override&#10;            public String toString(LocalDate date) {&#10;                return date != null ? formatter.format(date) : &quot;&quot;;&#10;            }&#10;&#10;            @Override&#10;            public LocalDate fromString(String string) {&#10;                return (string != null &amp;&amp; !string.isEmpty())&#10;                        ? LocalDate.parse(string, formatter) : null;&#10;            }&#10;        });&#10;&#10;        endDatePicker.setConverter(new javafx.util.StringConverter&lt;LocalDate&gt;() {&#10;            @Override&#10;            public String toString(LocalDate date) {&#10;                return date != null ? formatter.format(date) : &quot;&quot;;&#10;            }&#10;&#10;            @Override&#10;            public LocalDate fromString(String string) {&#10;                return (string != null &amp;&amp; !string.isEmpty())&#10;                        ? LocalDate.parse(string, formatter) : null;&#10;            }&#10;        });&#10;&#10;        // Group AM/PM toggles&#10;        var tg = new javafx.scene.control.ToggleGroup();&#10;        amRadio.setToggleGroup(tg);&#10;        pmRadio.setToggleGroup(tg);&#10;        amRadio.setSelected(true);&#10;&#10;        // Set initial AM/PM styling&#10;        updateAmPmStyling();&#10;&#10;        // Add listeners for AM/PM toggle buttons&#10;        amRadio.selectedProperty().addListener((obs, oldVal, newVal) -&gt; {&#10;            if (newVal) updateAmPmStyling();&#10;        });&#10;        pmRadio.selectedProperty().addListener((obs, oldVal, newVal) -&gt; {&#10;            if (newVal) updateAmPmStyling();&#10;        });&#10;&#10;        // Setup time prompt label&#10;        timePromptLabel = new Label(&quot;Add alert times to have them appear here.&quot;);&#10;        timePromptLabel.getStyleClass().add(&quot;time-list-prompt&quot;);&#10;        updateTimeListPrompt();&#10;    }&#10;&#10;    private void updateAmPmStyling() {&#10;        if (amRadio.isSelected()) {&#10;            amRadio.getStyleClass().add(&quot;am-selected&quot;);&#10;            pmRadio.getStyleClass().remove(&quot;am-selected&quot;);&#10;        } else {&#10;            pmRadio.getStyleClass().add(&quot;am-selected&quot;);&#10;            amRadio.getStyleClass().remove(&quot;am-selected&quot;);&#10;        }&#10;    }&#10;&#10;    private void updateTimeListPrompt() {&#10;        boolean hasTimes = timeListContainer.getChildren().stream()&#10;                .anyMatch(node -&gt; node instanceof Button);&#10;        if (!hasTimes) {&#10;            if (!timeListContainer.getChildren().contains(timePromptLabel)) {&#10;                timeListContainer.getChildren().setAll(timePromptLabel);&#10;            }&#10;        } else {&#10;            timeListContainer.getChildren().remove(timePromptLabel);&#10;        }&#10;    }&#10;&#10;    @FXML&#10;    private void handleAddTime(ActionEvent e) {&#10;        int hour = hourSpinner.getValue() % 12;&#10;        if (pmRadio.isSelected()) hour += 12;&#10;        LocalTime t = LocalTime.of(hour, minuteSpinner.getValue());&#10;        String timeText = t.format(displayFmt);&#10;&#10;        // Check if time already exists&#10;        boolean timeExists = timeListContainer.getChildren().stream()&#10;                .anyMatch(node -&gt; node instanceof Button &amp;&amp; ((Button) node).getText().equals(timeText));&#10;&#10;        if (!timeExists) {&#10;            Button timeButton = new Button(timeText);&#10;            timeButton.getStyleClass().add(&quot;time-button&quot;);&#10;            timeButton.setOnAction(event -&gt; handleTimeButtonClick(timeButton));&#10;            timeListContainer.getChildren().add(timeButton);&#10;            updateTimeListPrompt();&#10;        }&#10;    }&#10;&#10;    @FXML&#10;    private void handleRemoveTime(ActionEvent e) {&#10;        // Remove selected time button&#10;        timeListContainer.getChildren().removeIf(node -&gt;&#10;                node instanceof Button &amp;&amp; node.getStyleClass().contains(&quot;selected&quot;));&#10;        updateTimeListPrompt();&#10;    }&#10;&#10;    private void handleTimeButtonClick(Button timeButton) {&#10;        // Toggle selection&#10;        if (timeButton.getStyleClass().contains(&quot;selected&quot;)) {&#10;            timeButton.getStyleClass().remove(&quot;selected&quot;);&#10;        } else {&#10;            // Deselect all other buttons&#10;            timeListContainer.getChildren().forEach(node -&gt; {&#10;                if (node instanceof Button) {&#10;                    node.getStyleClass().remove(&quot;selected&quot;);&#10;                }&#10;            });&#10;            // Select this button&#10;            timeButton.getStyleClass().add(&quot;selected&quot;);&#10;        }&#10;    }&#10;&#10;    @FXML&#10;    private void handleSetReminder(ActionEvent e) {&#10;        String name = nameField.getText().trim();&#10;        LocalDate start = startDatePicker.getValue();&#10;        LocalDate end = endDatePicker.getValue();&#10;&#10;        if (name.isEmpty() || timeListContainer.getChildren().isEmpty()) {&#10;            new Alert(Alert.AlertType.WARNING,&#10;                    &quot;Please enter a name and at least one alert time.&quot;)&#10;                    .showAndWait();&#10;            return;&#10;        }&#10;&#10;        if (start == null || end == null) {&#10;            new Alert(Alert.AlertType.WARNING,&#10;                    &quot;Please select both start and end dates.&quot;)&#10;                    .showAndWait();&#10;            return;&#10;        }&#10;&#10;        if (end.isBefore(start)) {&#10;            new Alert(Alert.AlertType.WARNING,&#10;                    &quot;End date cannot be before start date.&quot;)&#10;                    .showAndWait();&#10;            return;&#10;        }&#10;&#10;        String note = noteField.getText().trim();&#10;&#10;        for (javafx.scene.Node node : timeListContainer.getChildren()) {&#10;            if (node instanceof Button) {&#10;                String ts = ((Button) node).getText();&#10;                LocalTime lt = LocalTime.parse(ts, displayFmt);&#10;                MedicineReminder r = new MedicineReminder(name, &quot;&quot;, start, end, lt, note);&#10;                reminderService.addReminder(r);&#10;            }&#10;        }&#10;&#10;        new Alert(Alert.AlertType.INFORMATION,&#10;                &quot;Reminder(s) saved!&quot;).showAndWait();&#10;        navigateToDashboard(e);&#10;    }&#10;&#10;    /** Cancel button → back to Dashboard */&#10;    @FXML&#10;    private void handleCancel(ActionEvent e) {&#10;        navigateToDashboard(e);&#10;    }&#10;&#10;    /** Dashboard nav (button or logo click) → back to Dashboard */&#10;    @FXML&#10;    private void handleDashboard(Event e) {&#10;        navigateToDashboard(e);&#10;    }&#10;&#10;    private void navigateToDashboard(Event event) {&#10;        try {&#10;            Parent dash = FXMLLoader.load(&#10;                    getClass().getResource(&#10;                            &quot;/com/momentum/dosein/fxml/dashboard.fxml&quot;&#10;                    )&#10;            );&#10;            Scene scene = ((Node)event.getSource()).getScene();&#10;            scene.setRoot(dash);&#10;        } catch (IOException ex) {&#10;            ex.printStackTrace();&#10;            new Alert(Alert.AlertType.ERROR,&#10;                    &quot;Could not load Dashboard.&quot;).showAndWait();&#10;        }&#10;    }&#10;&#10;    // Navigation methods for remaining nav buttons:&#10;    @FXML&#10;    private void handleManageSchedule(ActionEvent e) {&#10;        navigate(&quot;/com/momentum/dosein/fxml/manage_schedule.fxml&quot;, e);&#10;    }&#10;&#10;    @FXML&#10;    private void handleDoctorContacts(ActionEvent e) {&#10;        navigate(&quot;/com/momentum/dosein/fxml/doctor_contacts.fxml&quot;, e);&#10;    }&#10;&#10;    @FXML&#10;    private void handleEmergency(ActionEvent e) {&#10;        navigate(&quot;/com/momentum/dosein/fxml/emergency.fxml&quot;, e);&#10;    }&#10;&#10;    @FXML&#10;    private void handleAboutUs(ActionEvent e) {&#10;        navigate(&quot;/com/momentum/dosein/fxml/about_us.fxml&quot;, e);&#10;    }&#10;&#10;    private void navigate(String fxmlPath, ActionEvent e) {&#10;        try {&#10;            Parent page = FXMLLoader.load(getClass().getResource(fxmlPath));&#10;            Scene scene = ((Node) e.getSource()).getScene();&#10;            scene.setRoot(page);&#10;        } catch (IOException ex) {&#10;            ex.printStackTrace();&#10;            new Alert(Alert.AlertType.ERROR, &quot;Could not load page.&quot;).showAndWait();&#10;        }&#10;    }&#10;&#10;    @FXML&#10;    private void handleSignOut(Event e) {&#10;        Session.clear();&#10;        try {&#10;            Parent login = FXMLLoader.load(&#10;                    getClass().getResource(&#10;                            &quot;/com/momentum/dosein/fxml/login.fxml&quot;&#10;                    )&#10;            );&#10;            Scene scene = ((Node)e.getSource()).getScene();&#10;            scene.setRoot(login);&#10;        } catch (IOException ex) {&#10;            ex.printStackTrace();&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/resources/com/momentum/dosein/css/set_reminder.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/resources/com/momentum/dosein/css/set_reminder.css" />
              <option name="originalContent" value="/* set_reminder.css */&#10;&#10;/* Root Styles */&#10;.dashboard-root {&#10;    -fx-font-family: 'Poppins', 'Segoe UI', sans-serif;&#10;    -fx-background-color: #B8E0D1;&#10;}&#10;&#10;/* NAVIGATION BAR */&#10;.nav-bar {&#10;    -fx-background-color: #4BA684;&#10;    -fx-padding: 0;&#10;    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.1), 10, 0, 2, 0);&#10;    -fx-alignment: top-center;&#10;}&#10;&#10;.nav-header {&#10;    -fx-padding: 0 0 20 0;&#10;    -fx-alignment: center;&#10;}&#10;&#10;.nav-logo {&#10;    -fx-font-size: 28px;&#10;    -fx-text-fill: white;&#10;    -fx-font-weight: bold;&#10;}&#10;&#10;.logo-container {&#10;    -fx-background-color: #12594C;&#10;    -fx-padding: 15 20;&#10;    -fx-alignment: center-left;&#10;    -fx-min-width: 200;&#10;    -fx-pref-width: 200;&#10;}&#10;&#10;/* Navigation Buttons */&#10;.nav-button-active {&#10;    -fx-background-color: #12594C;&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 15px;&#10;    -fx-pref-width: 180px;&#10;    -fx-pref-height: 40px;&#10;    -fx-background-radius: 10px;&#10;    -fx-font-weight: 600;&#10;    -fx-alignment: CENTER_LEFT;&#10;    -fx-padding: 12 18;&#10;    -fx-graphic-text-gap: 12;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.nav-button-active:hover {&#10;    -fx-background-color: #24675B;&#10;}&#10;&#10;.nav-item {&#10;    -fx-background-color: #3D9574;&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 15px;&#10;    -fx-pref-width: 180px;&#10;    -fx-pref-height: 40px;&#10;    -fx-background-radius: 10px;&#10;    -fx-alignment: CENTER_LEFT;&#10;    -fx-font-weight: 600;&#10;    -fx-padding: 12 18;&#10;    -fx-graphic-text-gap: 12;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.nav-item:hover {&#10;    -fx-background-color: #24675B;&#10;}&#10;&#10;.nav-item-schedule {&#10;    -fx-background-color: #3D9574;&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 12px;&#10;    -fx-pref-width: 180px;&#10;    -fx-pref-height: 40px;&#10;    -fx-background-radius: 10px;&#10;    -fx-alignment: CENTER_LEFT;&#10;    -fx-font-weight: 600;&#10;    -fx-padding: 12 18;&#10;    -fx-graphic-text-gap: 12;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.nav-item-schedule:hover {&#10;    -fx-background-color: #24675B;&#10;}&#10;&#10;.nav-item-contacts {&#10;    -fx-background-color: #3D9574;&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 12px;&#10;    -fx-pref-width: 180px;&#10;    -fx-pref-height: 40px;&#10;    -fx-background-radius: 10px;&#10;    -fx-alignment: CENTER_LEFT;&#10;    -fx-font-weight: 600;&#10;    -fx-padding: 12 18;&#10;    -fx-graphic-text-gap: 12;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.nav-item-contacts:hover {&#10;    -fx-background-color: #24675B;&#10;}&#10;&#10;.nav-menu-container {&#10;    -fx-alignment: center;&#10;    -fx-halignment: center;&#10;}&#10;&#10;.nav-signout {&#10;    -fx-background-color: #DC6D67;&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 15px;&#10;    -fx-pref-width: 180px;&#10;    -fx-pref-height: 40px;&#10;    -fx-background-radius: 10px;&#10;    -fx-font-weight: 600;&#10;    -fx-alignment: CENTER_LEFT;&#10;    -fx-padding: 12 18;&#10;    -fx-graphic-text-gap: 12;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.nav-signout:hover {&#10;    -fx-background-color: #C55A54;&#10;}&#10;&#10;.signout-container {&#10;    -fx-alignment: bottom-center;&#10;    -fx-padding: 0 0 10 0;&#10;    -fx-halignment: center;&#10;}&#10;&#10;/* MAIN CONTENT AREA */&#10;.reminder-root {&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-alignment: top-center;&#10;    -fx-padding: 20 40;&#10;}&#10;&#10;/* CARD STYLES */&#10;.medicine-info-card {&#10;    -fx-background-color: #FFFFFF;&#10;    -fx-background-radius: 15px;&#10;    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.1), 10, 0, 2, 0);&#10;    -fx-alignment: top-left;&#10;}&#10;&#10;.alert-time-card {&#10;    -fx-background-color: #FFFFFF;&#10;    -fx-background-radius: 15px;&#10;    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.1), 10, 0, 2, 0);&#10;    -fx-alignment: top-center;&#10;}&#10;&#10;/* CARD TITLES */&#10;.card-title {&#10;    -fx-font-size: 18px;&#10;    -fx-text-fill: #12594C;&#10;    -fx-font-weight: bold;&#10;    -fx-alignment: center-left;&#10;}&#10;&#10;/* FORM FIELDS */&#10;.field-label {&#10;    -fx-font-size: 12px;&#10;    -fx-text-fill: #12594C;&#10;    -fx-font-weight: bold;&#10;}&#10;&#10;.medicine-field {&#10;    -fx-font-size: 13px;&#10;    -fx-text-fill: #12594C;&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 8px;&#10;    -fx-border-color: transparent;&#10;    -fx-padding: 8px;&#10;    -fx-prompt-text-fill: derive(#12594C, 70%);&#10;}&#10;&#10;.medicine-field:focused {&#10;    -fx-border-color: #12594C;&#10;    -fx-border-width: 1px;&#10;}&#10;&#10;/* DatePicker styling for medicine fields */&#10;.date-picker {&#10;    -fx-font-size: 13px;&#10;    -fx-text-fill: #12594C;&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 8px;&#10;    -fx-border-color: transparent;&#10;}&#10;&#10;.date-picker .text-field {&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 8px;&#10;    -fx-border-color: transparent;&#10;    -fx-padding: 8px;&#10;    -fx-prompt-text-fill: derive(#12594C, 70%);&#10;}&#10;&#10;.date-picker .arrow-button {&#10;    -fx-background-color: transparent;&#10;    -fx-border-color: transparent;&#10;}&#10;&#10;.date-picker .arrow-button .arrow {&#10;    -fx-background-color: #12594C;&#10;}&#10;&#10;/* TIME SELECTOR STYLES */&#10;.time-selector-container {&#10;    -fx-alignment: center;&#10;    -fx-spacing: 8;&#10;    -fx-padding: 6px;&#10;}&#10;&#10;.time-display-box {&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 8px;&#10;    -fx-padding: 6px 12px;&#10;    -fx-alignment: center;&#10;    -fx-spacing: 3;&#10;}&#10;&#10;.time-number-spinner {&#10;    -fx-font-size: 20px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #12594C;&#10;    -fx-background-color: transparent;&#10;    -fx-border-color: transparent;&#10;    -fx-alignment: center;&#10;}&#10;&#10;.time-number-spinner .increment-arrow-button,&#10;.time-number-spinner .decrement-arrow-button {&#10;    -fx-background-color: transparent;&#10;    -fx-border-color: transparent;&#10;    -fx-opacity: 1;&#10;}&#10;&#10;.time-number-spinner .increment-arrow {&#10;    -fx-background-color: #12594C;&#10;    -fx-shape: &quot;M 0 4 L 4 0 L 8 4 Z&quot;;&#10;}&#10;&#10;.time-number-spinner .decrement-arrow {&#10;    -fx-background-color: #12594C;&#10;    -fx-shape: &quot;M 0 0 L 4 4 L 8 0 Z&quot;;&#10;}&#10;&#10;.time-number-spinner .text-field {&#10;    -fx-font-size: 20px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #12594C;&#10;    -fx-background-color: #FFFFFF;&#10;    -fx-background-radius: 4px;&#10;    -fx-border-color: transparent;&#10;    -fx-alignment: center;&#10;    -fx-padding: 2px 4px;&#10;}&#10;&#10;.time-colon {&#10;    -fx-font-size: 20px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #12594C;&#10;}&#10;&#10;.time-caret {&#10;    -fx-font-size: 14px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #12594C;&#10;    -fx-padding: 0 0 0 3px;&#10;}&#10;&#10;/* AM/PM BUTTONS */&#10;.am-button, .pm-button {&#10;    -fx-font-size: 12px;&#10;    -fx-font-weight: bold;&#10;    -fx-background-radius: 5px;&#10;    -fx-cursor: hand;&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-text-fill: #12594C;&#10;    -fx-alignment: center;&#10;}&#10;&#10;.am-button:selected, .pm-button:selected {&#10;    -fx-background-color: #12594C;&#10;    -fx-text-fill: #FFFFFF;&#10;}&#10;&#10;/* ADD/REMOVE BUTTONS */&#10;.add-time-btn {&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-text-fill: #12594C;&#10;    -fx-font-size: 12px;&#10;    -fx-font-weight: 600;&#10;    -fx-background-radius: 8px;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.add-time-btn:hover {&#10;    -fx-background-color: #12594C;&#10;    -fx-text-fill: #FFFFFF;&#10;}&#10;&#10;.remove-time-btn {&#10;    -fx-background-color: #DC6D67;&#10;    -fx-text-fill: #FFFFFF;&#10;    -fx-font-size: 12px;&#10;    -fx-font-weight: 600;&#10;    -fx-background-radius: 8px;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.remove-time-btn:hover {&#10;    -fx-background-color: #C55A54;&#10;}&#10;&#10;/* TIME DISPLAY SECTION */&#10;.times-display-section {&#10;    -fx-alignment: center-left;&#10;    -fx-min-height: 60px;&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 8px;&#10;    -fx-padding: 10px;&#10;}&#10;&#10;/* HORIZONTAL SCROLL PANE */&#10;.time-scroll-pane {&#10;    -fx-background-color: transparent;&#10;    -fx-border-color: transparent;&#10;    -fx-fit-to-height: true;&#10;    -fx-hbar-policy: as-needed;&#10;    -fx-vbar-policy: never;&#10;    -fx-max-height: 45px;&#10;    -fx-min-height: 45px;&#10;}&#10;&#10;.time-scroll-pane .viewport {&#10;    -fx-background-color: transparent;&#10;}&#10;&#10;.time-scroll-pane .scroll-bar:horizontal {&#10;    -fx-background-color: transparent;&#10;    -fx-background-radius: 5px;&#10;    -fx-padding: 2px;&#10;}&#10;&#10;.time-scroll-pane .scroll-bar:horizontal .thumb {&#10;    -fx-background-color: #12594C;&#10;    -fx-background-radius: 5px;&#10;}&#10;&#10;.time-scroll-pane .scroll-bar:horizontal .track {&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 5px;&#10;}&#10;&#10;.time-pills-container {&#10;    -fx-alignment: center-left;&#10;    -fx-spacing: 6;&#10;    -fx-padding: 5px;&#10;}&#10;&#10;/* TIME PILLS/BUTTONS */&#10;.time-button {&#10;    -fx-background-color: #12594C;&#10;    -fx-text-fill: #FFFFFF;&#10;    -fx-font-size: 11px;&#10;    -fx-font-weight: 600;&#10;    -fx-background-radius: 15px;&#10;    -fx-padding: 6px 12px;&#10;    -fx-cursor: hand;&#10;    -fx-min-width: 70px;&#10;}&#10;&#10;.time-button:hover {&#10;    -fx-background-color: #0F4A3F;&#10;}&#10;&#10;.time-button.selected {&#10;    -fx-background-color: #DC6D67;&#10;    -fx-text-fill: #FFFFFF;&#10;}&#10;&#10;.time-button.selected:hover {&#10;    -fx-background-color: #C55A54;&#10;}&#10;&#10;/* ACTION BUTTONS */&#10;.action-buttons-container {&#10;    -fx-alignment: center;&#10;    -fx-spacing: 15;&#10;    -fx-padding: 5px 0 10px 0;&#10;}&#10;&#10;.cancel-button {&#10;    -fx-background-color: #DC6D67;&#10;    -fx-text-fill: #FFFFFF;&#10;    -fx-font-size: 13px;&#10;    -fx-font-weight: 600;&#10;    -fx-background-radius: 10px;&#10;    -fx-padding: 10px 20px;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.cancel-button:hover {&#10;    -fx-background-color: #C55A54;&#10;}&#10;&#10;.set-reminder-button {&#10;    -fx-background-color: #12594C;&#10;    -fx-text-fill: #FFFFFF;&#10;    -fx-font-size: 13px;&#10;    -fx-font-weight: 600;&#10;    -fx-background-radius: 10px;&#10;    -fx-padding: 10px 20px;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.set-reminder-button:hover {&#10;    -fx-background-color: #0F4A3F;&#10;}&#10;&#10;/* TextArea styling */&#10;.text-area {&#10;    -fx-font-size: 14px;&#10;    -fx-text-fill: #12594C;&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 8px;&#10;    -fx-border-radius: 8px;&#10;    -fx-border-color: #12594C;&#10;    -fx-border-width: 1px;&#10;    -fx-padding: 12px;&#10;}&#10;&#10;.text-area .content {&#10;    -fx-background-color: transparent;&#10;}&#10;&#10;.text-area:focused {&#10;    -fx-border-color: #12594C;&#10;    -fx-border-width: 1px;&#10;}" />
              <option name="updatedContent" value="/* set_reminder.css */&#10;&#10;/* Root Styles */&#10;.dashboard-root {&#10;    -fx-font-family: 'Poppins', 'Segoe UI', sans-serif;&#10;    -fx-background-color: #B8E0D1;&#10;}&#10;&#10;/* NAVIGATION BAR */&#10;.nav-bar {&#10;    -fx-background-color: #4BA684;&#10;    -fx-padding: 0;&#10;    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.1), 10, 0, 2, 0);&#10;    -fx-alignment: top-center;&#10;}&#10;&#10;.nav-header {&#10;    -fx-padding: 0 0 20 0;&#10;    -fx-alignment: center;&#10;}&#10;&#10;.nav-logo {&#10;    -fx-font-size: 28px;&#10;    -fx-text-fill: white;&#10;    -fx-font-weight: bold;&#10;}&#10;&#10;.logo-container {&#10;    -fx-background-color: #12594C;&#10;    -fx-padding: 15 20;&#10;    -fx-alignment: center-left;&#10;    -fx-min-width: 200;&#10;    -fx-pref-width: 200;&#10;}&#10;&#10;/* Navigation Buttons */&#10;.nav-button-active {&#10;    -fx-background-color: #12594C;&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 15px;&#10;    -fx-pref-width: 180px;&#10;    -fx-pref-height: 40px;&#10;    -fx-background-radius: 10px;&#10;    -fx-font-weight: 600;&#10;    -fx-alignment: CENTER_LEFT;&#10;    -fx-padding: 12 18;&#10;    -fx-graphic-text-gap: 12;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.nav-button-active:hover {&#10;    -fx-background-color: #24675B;&#10;}&#10;&#10;.nav-item {&#10;    -fx-background-color: #3D9574;&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 15px;&#10;    -fx-pref-width: 180px;&#10;    -fx-pref-height: 40px;&#10;    -fx-background-radius: 10px;&#10;    -fx-alignment: CENTER_LEFT;&#10;    -fx-font-weight: 600;&#10;    -fx-padding: 12 18;&#10;    -fx-graphic-text-gap: 12;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.nav-item:hover {&#10;    -fx-background-color: #24675B;&#10;}&#10;&#10;.nav-item-schedule {&#10;    -fx-background-color: #3D9574;&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 12px;&#10;    -fx-pref-width: 180px;&#10;    -fx-pref-height: 40px;&#10;    -fx-background-radius: 10px;&#10;    -fx-alignment: CENTER_LEFT;&#10;    -fx-font-weight: 600;&#10;    -fx-padding: 12 18;&#10;    -fx-graphic-text-gap: 12;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.nav-item-schedule:hover {&#10;    -fx-background-color: #24675B;&#10;}&#10;&#10;.nav-item-contacts {&#10;    -fx-background-color: #3D9574;&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 12px;&#10;    -fx-pref-width: 180px;&#10;    -fx-pref-height: 40px;&#10;    -fx-background-radius: 10px;&#10;    -fx-alignment: CENTER_LEFT;&#10;    -fx-font-weight: 600;&#10;    -fx-padding: 12 18;&#10;    -fx-graphic-text-gap: 12;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.nav-item-contacts:hover {&#10;    -fx-background-color: #24675B;&#10;}&#10;&#10;.nav-menu-container {&#10;    -fx-alignment: center;&#10;    -fx-halignment: center;&#10;}&#10;&#10;.nav-signout {&#10;    -fx-background-color: #DC6D67;&#10;    -fx-text-fill: white;&#10;    -fx-font-size: 15px;&#10;    -fx-pref-width: 180px;&#10;    -fx-pref-height: 40px;&#10;    -fx-background-radius: 10px;&#10;    -fx-font-weight: 600;&#10;    -fx-alignment: CENTER_LEFT;&#10;    -fx-padding: 12 18;&#10;    -fx-graphic-text-gap: 12;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.nav-signout:hover {&#10;    -fx-background-color: #C55A54;&#10;}&#10;&#10;.signout-container {&#10;    -fx-alignment: bottom-center;&#10;    -fx-padding: 0 0 10 0;&#10;    -fx-halignment: center;&#10;}&#10;&#10;/* MAIN CONTENT AREA */&#10;.reminder-root {&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-alignment: top-center;&#10;    -fx-padding: 20 40;&#10;}&#10;&#10;/* CARD STYLES */&#10;.medicine-info-card {&#10;    -fx-background-color: #FFFFFF;&#10;    -fx-background-radius: 15px;&#10;    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.1), 10, 0, 2, 0);&#10;    -fx-alignment: top-left;&#10;}&#10;&#10;.alert-time-card {&#10;    -fx-background-color: #FFFFFF;&#10;    -fx-background-radius: 15px;&#10;    -fx-effect: dropshadow(gaussian, rgba(0,0,0,0.1), 10, 0, 2, 0);&#10;    -fx-alignment: top-center;&#10;}&#10;&#10;/* CARD TITLES */&#10;.card-title {&#10;    -fx-font-size: 18px;&#10;    -fx-text-fill: #12594C;&#10;    -fx-font-weight: bold;&#10;    -fx-alignment: center-left;&#10;}&#10;&#10;/* FORM FIELDS */&#10;.field-label {&#10;    -fx-font-size: 12px;&#10;    -fx-text-fill: #12594C;&#10;    -fx-font-weight: bold;&#10;}&#10;&#10;.medicine-field {&#10;    -fx-font-size: 13px;&#10;    -fx-text-fill: #12594C;&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 8px;&#10;    -fx-border-color: transparent;&#10;    -fx-padding: 8px;&#10;    -fx-prompt-text-fill: derive(#12594C, 70%);&#10;}&#10;&#10;.medicine-field:focused {&#10;    -fx-border-color: #12594C;&#10;    -fx-border-width: 1px;&#10;}&#10;&#10;/* DatePicker styling for medicine fields */&#10;.date-picker {&#10;    -fx-font-size: 13px;&#10;    -fx-text-fill: #12594C;&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 8px;&#10;    -fx-border-color: transparent;&#10;}&#10;&#10;.date-picker .text-field {&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 8px;&#10;    -fx-border-color: transparent;&#10;    -fx-padding: 8px;&#10;    -fx-prompt-text-fill: derive(#12594C, 70%);&#10;}&#10;&#10;.date-picker .arrow-button {&#10;    -fx-background-color: transparent;&#10;    -fx-border-color: transparent;&#10;}&#10;&#10;.date-picker .arrow-button .arrow {&#10;    -fx-background-color: #12594C;&#10;}&#10;&#10;/* TIME SELECTOR STYLES */&#10;.time-selector-container {&#10;    -fx-alignment: center;&#10;    -fx-spacing: 8;&#10;    -fx-padding: 6px;&#10;}&#10;&#10;.time-display-box {&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 8px;&#10;    -fx-padding: 6px 12px;&#10;    -fx-alignment: center;&#10;    -fx-spacing: 3;&#10;}&#10;&#10;.time-number-spinner {&#10;    -fx-font-size: 20px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #12594C;&#10;    -fx-background-color: transparent;&#10;    -fx-border-color: transparent;&#10;    -fx-alignment: center;&#10;}&#10;&#10;.time-number-spinner .increment-arrow-button,&#10;.time-number-spinner .decrement-arrow-button {&#10;    -fx-background-color: transparent;&#10;    -fx-border-color: transparent;&#10;    -fx-opacity: 1;&#10;}&#10;&#10;.time-number-spinner .increment-arrow {&#10;    -fx-background-color: #12594C;&#10;    -fx-shape: &quot;M 0 4 L 4 0 L 8 4 Z&quot;;&#10;}&#10;&#10;.time-number-spinner .decrement-arrow {&#10;    -fx-background-color: #12594C;&#10;    -fx-shape: &quot;M 0 0 L 4 4 L 8 0 Z&quot;;&#10;}&#10;&#10;.time-number-spinner .text-field {&#10;    -fx-font-size: 20px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #12594C;&#10;    -fx-background-color: #FFFFFF;&#10;    -fx-background-radius: 4px;&#10;    -fx-border-color: transparent;&#10;    -fx-alignment: center;&#10;    -fx-padding: 2px 4px;&#10;}&#10;&#10;.time-colon {&#10;    -fx-font-size: 20px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #12594C;&#10;}&#10;&#10;.time-caret {&#10;    -fx-font-size: 14px;&#10;    -fx-font-weight: bold;&#10;    -fx-text-fill: #12594C;&#10;    -fx-padding: 0 0 0 3px;&#10;}&#10;&#10;/* AM/PM BUTTONS */&#10;.am-button, .pm-button {&#10;    -fx-font-size: 12px;&#10;    -fx-font-weight: bold;&#10;    -fx-background-radius: 5px;&#10;    -fx-cursor: hand;&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-text-fill: #12594C;&#10;    -fx-alignment: center;&#10;}&#10;&#10;.am-button:selected, .pm-button:selected {&#10;    -fx-background-color: #12594C;&#10;    -fx-text-fill: #FFFFFF;&#10;}&#10;&#10;/* ADD/REMOVE BUTTONS */&#10;.add-time-btn {&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-text-fill: #12594C;&#10;    -fx-font-size: 12px;&#10;    -fx-font-weight: 600;&#10;    -fx-background-radius: 8px;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.add-time-btn:hover {&#10;    -fx-background-color: #12594C;&#10;    -fx-text-fill: #FFFFFF;&#10;}&#10;&#10;.remove-time-btn {&#10;    -fx-background-color: #DC6D67;&#10;    -fx-text-fill: #FFFFFF;&#10;    -fx-font-size: 12px;&#10;    -fx-font-weight: 600;&#10;    -fx-background-radius: 8px;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.remove-time-btn:hover {&#10;    -fx-background-color: #C55A54;&#10;}&#10;&#10;/* TIME DISPLAY SECTION */&#10;.times-display-section {&#10;    -fx-alignment: center-left;&#10;    -fx-min-height: 60px;&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 8px;&#10;    -fx-padding: 10px;&#10;}&#10;&#10;/* HORIZONTAL SCROLL PANE */&#10;.time-scroll-pane {&#10;    -fx-background-color: transparent;&#10;    -fx-border-color: transparent;&#10;    -fx-fit-to-height: true;&#10;    -fx-hbar-policy: as-needed;&#10;    -fx-vbar-policy: never;&#10;    -fx-max-height: 45px;&#10;    -fx-min-height: 45px;&#10;}&#10;&#10;.time-scroll-pane .viewport {&#10;    -fx-background-color: transparent;&#10;}&#10;&#10;.time-scroll-pane .scroll-bar:horizontal {&#10;    -fx-background-color: transparent;&#10;    -fx-background-radius: 5px;&#10;    -fx-padding: 2px;&#10;}&#10;&#10;.time-scroll-pane .scroll-bar:horizontal .thumb {&#10;    -fx-background-color: #12594C;&#10;    -fx-background-radius: 5px;&#10;}&#10;&#10;.time-scroll-pane .scroll-bar:horizontal .track {&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 5px;&#10;}&#10;&#10;.time-pills-container {&#10;    -fx-alignment: center-left;&#10;    -fx-spacing: 6;&#10;    -fx-padding: 5px;&#10;}&#10;&#10;/* TIME PILLS/BUTTONS */&#10;.time-button {&#10;    -fx-background-color: #12594C;&#10;    -fx-text-fill: #FFFFFF;&#10;    -fx-font-size: 11px;&#10;    -fx-font-weight: 600;&#10;    -fx-background-radius: 15px;&#10;    -fx-padding: 6px 12px;&#10;    -fx-cursor: hand;&#10;    -fx-min-width: 70px;&#10;}&#10;&#10;.time-button:hover {&#10;    -fx-background-color: #0F4A3F;&#10;}&#10;&#10;.time-button.selected {&#10;    -fx-background-color: #DC6D67;&#10;    -fx-text-fill: #FFFFFF;&#10;}&#10;&#10;.time-button.selected:hover {&#10;    -fx-background-color: #C55A54;&#10;}&#10;&#10;/* ACTION BUTTONS */&#10;.action-buttons-container {&#10;    -fx-alignment: center;&#10;    -fx-spacing: 15;&#10;    -fx-padding: 5px 0 10px 0;&#10;}&#10;&#10;.cancel-button {&#10;    -fx-background-color: #DC6D67;&#10;    -fx-text-fill: #FFFFFF;&#10;    -fx-font-size: 13px;&#10;    -fx-font-weight: 600;&#10;    -fx-background-radius: 10px;&#10;    -fx-padding: 10px 20px;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.cancel-button:hover {&#10;    -fx-background-color: #C55A54;&#10;}&#10;&#10;.set-reminder-button {&#10;    -fx-background-color: #12594C;&#10;    -fx-text-fill: #FFFFFF;&#10;    -fx-font-size: 13px;&#10;    -fx-font-weight: 600;&#10;    -fx-background-radius: 10px;&#10;    -fx-padding: 10px 20px;&#10;    -fx-cursor: hand;&#10;}&#10;&#10;.set-reminder-button:hover {&#10;    -fx-background-color: #0F4A3F;&#10;}&#10;&#10;/* TextArea styling */&#10;.text-area {&#10;    -fx-font-size: 14px;&#10;    -fx-text-fill: #12594C;&#10;    -fx-background-color: #B4E8D4;&#10;    -fx-background-radius: 8px;&#10;    -fx-border-radius: 8px;&#10;    -fx-border-color: #12594C;&#10;    -fx-border-width: 1px;&#10;    -fx-padding: 12px;&#10;}&#10;&#10;.text-area .content {&#10;    -fx-background-color: transparent;&#10;}&#10;&#10;.text-area:focused {&#10;    -fx-border-color: #12594C;&#10;    -fx-border-width: 1px;&#10;}&#10;&#10;.time-list-prompt {&#10;    -fx-text-fill: #12594C;&#10;    -fx-font-size: 13px;&#10;    -fx-opacity: 0.7;&#10;    -fx-padding: 0 0 0 8px;&#10;    -fx-font-style: italic;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/resources/com/momentum/dosein/fxml/set_reminder.fxml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/resources/com/momentum/dosein/fxml/set_reminder.fxml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&#10;&lt;?import javafx.geometry.Insets?&gt;&#10;&lt;?import javafx.scene.control.Button?&gt;&#10;&lt;?import javafx.scene.control.DatePicker?&gt;&#10;&lt;?import javafx.scene.control.Label?&gt;&#10;&lt;?import javafx.scene.control.ScrollPane?&gt;&#10;&lt;?import javafx.scene.control.Spinner?&gt;&#10;&lt;?import javafx.scene.control.TextField?&gt;&#10;&lt;?import javafx.scene.control.ToggleButton?&gt;&#10;&lt;?import javafx.scene.image.Image?&gt;&#10;&lt;?import javafx.scene.image.ImageView?&gt;&#10;&lt;?import javafx.scene.layout.BorderPane?&gt;&#10;&lt;?import javafx.scene.layout.HBox?&gt;&#10;&lt;?import javafx.scene.layout.Region?&gt;&#10;&lt;?import javafx.scene.layout.VBox?&gt;&#10;&#10;&lt;BorderPane fx:id=&quot;rootPane&quot; maxHeight=&quot;-Infinity&quot; maxWidth=&quot;-Infinity&quot; minHeight=&quot;-Infinity&quot; minWidth=&quot;-Infinity&quot; prefHeight=&quot;600&quot; prefWidth=&quot;800&quot; styleClass=&quot;dashboard-root&quot; stylesheets=&quot;@../css/dashboard.css,@../css/set_reminder.css&quot; xmlns=&quot;http://javafx.com/javafx/24.0.1&quot; xmlns:fx=&quot;http://javafx.com/fxml/1&quot; fx:controller=&quot;com.momentum.dosein.controller.SetReminderController&quot;&gt;&#10;&#10;    &lt;!-- LEFT NAVIGATION --&gt;&#10;    &lt;left&gt;&#10;        &lt;VBox prefWidth=&quot;200&quot; spacing=&quot;15&quot; styleClass=&quot;nav-bar&quot;&gt;&#10;            &lt;padding&gt;&#10;                &lt;Insets bottom=&quot;20&quot; left=&quot;15&quot; right=&quot;15&quot; top=&quot;20&quot; /&gt;&#10;            &lt;/padding&gt;&#10;&#10;            &lt;!-- Logo and App Name --&gt;&#10;            &lt;HBox alignment=&quot;CENTER_LEFT&quot; prefHeight=&quot;70&quot; spacing=&quot;12&quot; styleClass=&quot;nav-header&quot;&gt;&#10;                &lt;HBox alignment=&quot;CENTER_LEFT&quot; spacing=&quot;12&quot; styleClass=&quot;logo-container&quot;&gt;&#10;                    &lt;ImageView fitHeight=&quot;30&quot; fitWidth=&quot;30&quot; preserveRatio=&quot;true&quot;&gt;&#10;                        &lt;Image url=&quot;@../images/logo.png&quot; /&gt;&#10;                    &lt;/ImageView&gt;&#10;                    &lt;Label styleClass=&quot;nav-logo&quot; text=&quot;DoseIn&quot; /&gt;&#10;                &lt;/HBox&gt;&#10;            &lt;/HBox&gt;&#10;&#10;            &lt;!-- Navigation Menu --&gt;&#10;            &lt;VBox spacing=&quot;8&quot; styleClass=&quot;nav-menu-container&quot;&gt;&#10;                &lt;Button onAction=&quot;#handleDashboard&quot; styleClass=&quot;nav-item&quot; text=&quot;Dashboard&quot;&gt;&#10;                    &lt;graphic&gt;&#10;                        &lt;ImageView fitHeight=&quot;18&quot; fitWidth=&quot;18&quot; preserveRatio=&quot;true&quot;&gt;&#10;                            &lt;Image url=&quot;@../images/dashboard-icon.png&quot; /&gt;&#10;                        &lt;/ImageView&gt;&#10;                    &lt;/graphic&gt;&#10;                &lt;/Button&gt;&#10;&#10;                &lt;Button onAction=&quot;#handleManageSchedule&quot; styleClass=&quot;nav-item-schedule&quot; text=&quot;Manage Schedule&quot;&gt;&#10;                    &lt;graphic&gt;&#10;                        &lt;ImageView fitHeight=&quot;18&quot; fitWidth=&quot;18&quot; preserveRatio=&quot;true&quot;&gt;&#10;                            &lt;Image url=&quot;@../images/calendar-icon.png&quot; /&gt;&#10;                        &lt;/ImageView&gt;&#10;                    &lt;/graphic&gt;&#10;                &lt;/Button&gt;&#10;&#10;                &lt;Button onAction=&quot;#handleDoctorContacts&quot; styleClass=&quot;nav-item-contacts&quot; text=&quot;Doctor Contacts&quot;&gt;&#10;                    &lt;graphic&gt;&#10;                        &lt;ImageView fitHeight=&quot;18&quot; fitWidth=&quot;18&quot; preserveRatio=&quot;true&quot;&gt;&#10;                            &lt;Image url=&quot;@../images/doctor-icon.png&quot; /&gt;&#10;                        &lt;/ImageView&gt;&#10;                    &lt;/graphic&gt;&#10;                &lt;/Button&gt;&#10;&#10;                &lt;Button onAction=&quot;#handleEmergency&quot; styleClass=&quot;nav-item&quot; text=&quot;Emergency&quot;&gt;&#10;                    &lt;graphic&gt;&#10;                        &lt;ImageView fitHeight=&quot;18&quot; fitWidth=&quot;18&quot; preserveRatio=&quot;true&quot;&gt;&#10;                            &lt;Image url=&quot;@../images/emergency-icon.png&quot; /&gt;&#10;                        &lt;/ImageView&gt;&#10;                    &lt;/graphic&gt;&#10;                &lt;/Button&gt;&#10;&#10;                &lt;Button onAction=&quot;#handleAboutUs&quot; styleClass=&quot;nav-item&quot; text=&quot;About Us&quot;&gt;&#10;                    &lt;graphic&gt;&#10;                        &lt;ImageView fitHeight=&quot;18&quot; fitWidth=&quot;18&quot; preserveRatio=&quot;true&quot;&gt;&#10;                            &lt;Image url=&quot;@../images/about-icon.png&quot; /&gt;&#10;                        &lt;/ImageView&gt;&#10;                    &lt;/graphic&gt;&#10;                &lt;/Button&gt;&#10;            &lt;/VBox&gt;&#10;&#10;            &lt;Region VBox.vgrow=&quot;ALWAYS&quot; /&gt;&#10;&#10;            &lt;VBox styleClass=&quot;signout-container&quot;&gt;&#10;                &lt;Button onAction=&quot;#handleSignOut&quot; styleClass=&quot;nav-signout&quot; text=&quot;Sign Out&quot;&gt;&#10;                    &lt;graphic&gt;&#10;                        &lt;ImageView fitHeight=&quot;18&quot; fitWidth=&quot;18&quot; preserveRatio=&quot;true&quot;&gt;&#10;                            &lt;Image url=&quot;@../images/signout-icon.png&quot; /&gt;&#10;                        &lt;/ImageView&gt;&#10;                    &lt;/graphic&gt;&#10;                &lt;/Button&gt;&#10;            &lt;/VBox&gt;&#10;        &lt;/VBox&gt;&#10;    &lt;/left&gt;&#10;&#10;    &lt;center&gt;&#10;        &lt;VBox alignment=&quot;TOP_CENTER&quot; minHeight=&quot;-Infinity&quot; minWidth=&quot;-Infinity&quot; prefHeight=&quot;600.0&quot; prefWidth=&quot;600.0&quot; spacing=&quot;15&quot; styleClass=&quot;reminder-root&quot;&gt;&#10;            &lt;!-- First Card: Medicine Information --&gt;&#10;            &lt;VBox fx:id=&quot;medicineCard&quot; alignment=&quot;TOP_LEFT&quot; prefHeight=&quot;600.0&quot; prefWidth=&quot;520.0&quot; spacing=&quot;12&quot; styleClass=&quot;medicine-info-card&quot;&gt;&#10;                &lt;padding&gt;&#10;                    &lt;Insets bottom=&quot;18&quot; left=&quot;30&quot; right=&quot;30&quot; top=&quot;18&quot; /&gt;&#10;                &lt;/padding&gt;&#10;&#10;                &lt;!-- Title --&gt;&#10;                &lt;Label styleClass=&quot;card-title&quot; text=&quot;Add Medicine Information&quot; /&gt;&#10;&#10;                &lt;!-- Name Field --&gt;&#10;                &lt;VBox spacing=&quot;3&quot;&gt;&#10;                    &lt;Label styleClass=&quot;field-label&quot; text=&quot;Name :&quot; /&gt;&#10;                    &lt;TextField fx:id=&quot;nameField&quot; prefHeight=&quot;28.0&quot; promptText=&quot;Enter medicine name&quot; styleClass=&quot;medicine-field&quot; /&gt;&#10;                &lt;/VBox&gt;&#10;&#10;                &lt;!-- Start and End Date Fields (Side by Side) --&gt;&#10;                &lt;HBox alignment=&quot;CENTER_LEFT&quot; spacing=&quot;20&quot;&gt;&#10;                    &lt;VBox spacing=&quot;3&quot; HBox.hgrow=&quot;ALWAYS&quot;&gt;&#10;                        &lt;Label styleClass=&quot;field-label&quot; text=&quot;Start Date :&quot; /&gt;&#10;                        &lt;DatePicker fx:id=&quot;startDatePicker&quot; prefHeight=&quot;28.0&quot; styleClass=&quot;medicine-field&quot; /&gt;&#10;                    &lt;/VBox&gt;&#10;                    &lt;VBox spacing=&quot;3&quot; HBox.hgrow=&quot;ALWAYS&quot;&gt;&#10;                        &lt;Label styleClass=&quot;field-label&quot; text=&quot;End Date :&quot; /&gt;&#10;                        &lt;DatePicker fx:id=&quot;endDatePicker&quot; prefHeight=&quot;28.0&quot; styleClass=&quot;medicine-field&quot; /&gt;&#10;                    &lt;/VBox&gt;&#10;                &lt;/HBox&gt;&#10;&#10;                &lt;!-- Additional Information Field --&gt;&#10;                &lt;VBox spacing=&quot;3&quot;&gt;&#10;                    &lt;Label styleClass=&quot;field-label&quot; text=&quot;Additional Information :&quot; /&gt;&#10;                    &lt;TextField fx:id=&quot;noteField&quot; prefHeight=&quot;28.0&quot; promptText=&quot;Additional information goes here&quot; styleClass=&quot;medicine-field&quot; /&gt;&#10;                &lt;/VBox&gt;&#10;            &lt;/VBox&gt;&#10;&#10;            &lt;!-- Second Card: Alert Time --&gt;&#10;            &lt;VBox fx:id=&quot;alertTimeCard&quot; alignment=&quot;TOP_CENTER&quot; minHeight=&quot;-Infinity&quot; minWidth=&quot;-Infinity&quot; prefHeight=&quot;175.0&quot; prefWidth=&quot;520.0&quot; spacing=&quot;8&quot; styleClass=&quot;alert-time-card&quot;&gt;&#10;                &lt;padding&gt;&#10;                    &lt;Insets bottom=&quot;15&quot; left=&quot;30&quot; right=&quot;30&quot; top=&quot;15&quot; /&gt;&#10;                &lt;/padding&gt;&#10;                &lt;HBox maxWidth=&quot;-Infinity&quot; minHeight=&quot;-Infinity&quot; minWidth=&quot;-Infinity&quot; prefHeight=&quot;70.0&quot; prefWidth=&quot;414.0&quot;&gt;&#10;                    &lt;children&gt;&#10;&#10;                        &lt;!-- Time Display Area with existing times --&gt;&#10;                        &lt;VBox alignment=&quot;CENTER&quot; maxHeight=&quot;-Infinity&quot; maxWidth=&quot;-Infinity&quot; minHeight=&quot;39.0&quot; minWidth=&quot;-Infinity&quot; prefHeight=&quot;70.0&quot; prefWidth=&quot;416.0&quot; styleClass=&quot;times-display-section&quot;&gt;&#10;                            &lt;ScrollPane fitToHeight=&quot;true&quot; hbarPolicy=&quot;NEVER&quot; maxHeight=&quot;75.0&quot; prefHeight=&quot;75.0&quot; prefWidth=&quot;330.0&quot; styleClass=&quot;time-scroll-pane&quot; vbarPolicy=&quot;NEVER&quot; VBox.vgrow=&quot;ALWAYS&quot;&gt;&#10;                                &lt;HBox fx:id=&quot;timeListContainer&quot; spacing=&quot;6&quot; styleClass=&quot;time-pills-container&quot; /&gt;&#10;                                &lt;padding&gt;&#10;                                    &lt;Insets left=&quot;10.0&quot; /&gt;&#10;                                &lt;/padding&gt;&#10;                            &lt;/ScrollPane&gt;&#10;                        &lt;/VBox&gt;&#10;                    &lt;/children&gt;&#10;                &lt;/HBox&gt;&#10;&#10;                &lt;!-- Time Selector --&gt;&#10;                &lt;HBox alignment=&quot;CENTER&quot; prefHeight=&quot;45.0&quot; prefWidth=&quot;459.0&quot; styleClass=&quot;time-selector-container&quot;&gt;&#10;                    &lt;!-- Hour:Minute Display with colons --&gt;&#10;                    &lt;HBox alignment=&quot;CENTER&quot; prefHeight=&quot;58.0&quot; prefWidth=&quot;250.0&quot; spacing=&quot;3&quot; styleClass=&quot;time-display-box&quot;&gt;&#10;                        &lt;Spinner fx:id=&quot;hourSpinner&quot; editable=&quot;true&quot; prefHeight=&quot;46.0&quot; prefWidth=&quot;100.0&quot; styleClass=&quot;time-number-spinner&quot; /&gt;&#10;                        &lt;Label styleClass=&quot;time-colon&quot; text=&quot;:&quot; /&gt;&#10;                        &lt;Spinner fx:id=&quot;minuteSpinner&quot; editable=&quot;true&quot; prefHeight=&quot;46.0&quot; prefWidth=&quot;100.0&quot; styleClass=&quot;time-number-spinner&quot; /&gt;&#10;                    &lt;/HBox&gt;&#10;&#10;                    &lt;!-- AM/PM Buttons --&gt;&#10;                    &lt;VBox alignment=&quot;CENTER&quot; spacing=&quot;2&quot;&gt;&#10;                        &lt;ToggleButton fx:id=&quot;amRadio&quot; prefHeight=&quot;26.0&quot; prefWidth=&quot;60.0&quot; styleClass=&quot;am-button&quot; text=&quot;AM&quot; /&gt;&#10;                        &lt;ToggleButton fx:id=&quot;pmRadio&quot; prefHeight=&quot;22.0&quot; prefWidth=&quot;60.0&quot; styleClass=&quot;pm-button&quot; text=&quot;PM&quot; /&gt;&#10;                    &lt;/VBox&gt;&#10;&#10;                    &lt;!-- Add/Remove Buttons --&gt;&#10;                    &lt;VBox alignment=&quot;CENTER&quot; spacing=&quot;2&quot;&gt;&#10;                        &lt;Button fx:id=&quot;addTimeButton&quot; onAction=&quot;#handleAddTime&quot; prefHeight=&quot;22.0&quot; prefWidth=&quot;90.0&quot; styleClass=&quot;add-time-btn&quot; text=&quot;Add&quot; /&gt;&#10;                        &lt;Button fx:id=&quot;removeTimeButton&quot; onAction=&quot;#handleRemoveTime&quot; prefHeight=&quot;22.0&quot; prefWidth=&quot;90.0&quot; styleClass=&quot;remove-time-btn&quot; text=&quot;Remove&quot; /&gt;&#10;                    &lt;/VBox&gt;&#10;                &lt;/HBox&gt;&#10;            &lt;/VBox&gt;&#10;&#10;            &lt;!-- Bottom Action Buttons (Outside of cards) --&gt;&#10;            &lt;HBox alignment=&quot;CENTER&quot; prefHeight=&quot;82.0&quot; prefWidth=&quot;520.0&quot; spacing=&quot;5.0&quot; styleClass=&quot;action-buttons-container&quot;&gt;&#10;                &lt;Button onAction=&quot;#handleCancel&quot; styleClass=&quot;cancel-button&quot; text=&quot;Cancel&quot; /&gt;&#10;                &lt;Button onAction=&quot;#handleSetReminder&quot; styleClass=&quot;set-reminder-button&quot; text=&quot;Set Reminder&quot; /&gt;&#10;            &lt;/HBox&gt;&#10;        &lt;/VBox&gt;&#10;    &lt;/center&gt;&#10;&lt;/BorderPane&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&#10;&lt;?import javafx.geometry.Insets?&gt;&#10;&lt;?import javafx.scene.control.Button?&gt;&#10;&lt;?import javafx.scene.control.DatePicker?&gt;&#10;&lt;?import javafx.scene.control.Label?&gt;&#10;&lt;?import javafx.scene.control.ScrollPane?&gt;&#10;&lt;?import javafx.scene.control.Spinner?&gt;&#10;&lt;?import javafx.scene.control.TextField?&gt;&#10;&lt;?import javafx.scene.control.ToggleButton?&gt;&#10;&lt;?import javafx.scene.image.Image?&gt;&#10;&lt;?import javafx.scene.image.ImageView?&gt;&#10;&lt;?import javafx.scene.layout.BorderPane?&gt;&#10;&lt;?import javafx.scene.layout.HBox?&gt;&#10;&lt;?import javafx.scene.layout.Region?&gt;&#10;&lt;?import javafx.scene.layout.VBox?&gt;&#10;&#10;&lt;BorderPane fx:id=&quot;rootPane&quot; maxHeight=&quot;-Infinity&quot; maxWidth=&quot;-Infinity&quot; minHeight=&quot;-Infinity&quot; minWidth=&quot;-Infinity&quot; prefHeight=&quot;600&quot; prefWidth=&quot;800&quot; styleClass=&quot;dashboard-root&quot; stylesheets=&quot;@../css/dashboard.css,@../css/set_reminder.css&quot; xmlns=&quot;http://javafx.com/javafx/24.0.1&quot; xmlns:fx=&quot;http://javafx.com/fxml/1&quot; fx:controller=&quot;com.momentum.dosein.controller.SetReminderController&quot;&gt;&#10;&#10;    &lt;!-- LEFT NAVIGATION --&gt;&#10;    &lt;left&gt;&#10;        &lt;VBox prefWidth=&quot;200&quot; spacing=&quot;15&quot; styleClass=&quot;nav-bar&quot;&gt;&#10;            &lt;padding&gt;&#10;                &lt;Insets bottom=&quot;20&quot; left=&quot;15&quot; right=&quot;15&quot; top=&quot;20&quot; /&gt;&#10;            &lt;/padding&gt;&#10;&#10;            &lt;!-- Logo and App Name --&gt;&#10;            &lt;HBox alignment=&quot;CENTER_LEFT&quot; prefHeight=&quot;70&quot; spacing=&quot;12&quot; styleClass=&quot;nav-header&quot;&gt;&#10;                &lt;HBox alignment=&quot;CENTER_LEFT&quot; spacing=&quot;12&quot; styleClass=&quot;logo-container&quot;&gt;&#10;                    &lt;ImageView fitHeight=&quot;30&quot; fitWidth=&quot;30&quot; preserveRatio=&quot;true&quot;&gt;&#10;                        &lt;Image url=&quot;@../images/logo.png&quot; /&gt;&#10;                    &lt;/ImageView&gt;&#10;                    &lt;Label styleClass=&quot;nav-logo&quot; text=&quot;DoseIn&quot; /&gt;&#10;                &lt;/HBox&gt;&#10;            &lt;/HBox&gt;&#10;&#10;            &lt;!-- Navigation Menu --&gt;&#10;            &lt;VBox spacing=&quot;8&quot; styleClass=&quot;nav-menu-container&quot;&gt;&#10;                &lt;Button onAction=&quot;#handleDashboard&quot; styleClass=&quot;nav-item&quot; text=&quot;Dashboard&quot;&gt;&#10;                    &lt;graphic&gt;&#10;                        &lt;ImageView fitHeight=&quot;18&quot; fitWidth=&quot;18&quot; preserveRatio=&quot;true&quot;&gt;&#10;                            &lt;Image url=&quot;@../images/dashboard-icon.png&quot; /&gt;&#10;                        &lt;/ImageView&gt;&#10;                    &lt;/graphic&gt;&#10;                &lt;/Button&gt;&#10;&#10;                &lt;Button onAction=&quot;#handleManageSchedule&quot; styleClass=&quot;nav-item-schedule&quot; text=&quot;Manage Schedule&quot;&gt;&#10;                    &lt;graphic&gt;&#10;                        &lt;ImageView fitHeight=&quot;18&quot; fitWidth=&quot;18&quot; preserveRatio=&quot;true&quot;&gt;&#10;                            &lt;Image url=&quot;@../images/calendar-icon.png&quot; /&gt;&#10;                        &lt;/ImageView&gt;&#10;                    &lt;/graphic&gt;&#10;                &lt;/Button&gt;&#10;&#10;                &lt;Button onAction=&quot;#handleDoctorContacts&quot; styleClass=&quot;nav-item-contacts&quot; text=&quot;Doctor Contacts&quot;&gt;&#10;                    &lt;graphic&gt;&#10;                        &lt;ImageView fitHeight=&quot;18&quot; fitWidth=&quot;18&quot; preserveRatio=&quot;true&quot;&gt;&#10;                            &lt;Image url=&quot;@../images/doctor-icon.png&quot; /&gt;&#10;                        &lt;/ImageView&gt;&#10;                    &lt;/graphic&gt;&#10;                &lt;/Button&gt;&#10;&#10;                &lt;Button onAction=&quot;#handleEmergency&quot; styleClass=&quot;nav-item&quot; text=&quot;Emergency&quot;&gt;&#10;                    &lt;graphic&gt;&#10;                        &lt;ImageView fitHeight=&quot;18&quot; fitWidth=&quot;18&quot; preserveRatio=&quot;true&quot;&gt;&#10;                            &lt;Image url=&quot;@../images/emergency-icon.png&quot; /&gt;&#10;                        &lt;/ImageView&gt;&#10;                    &lt;/graphic&gt;&#10;                &lt;/Button&gt;&#10;&#10;                &lt;Button onAction=&quot;#handleAboutUs&quot; styleClass=&quot;nav-item&quot; text=&quot;About Us&quot;&gt;&#10;                    &lt;graphic&gt;&#10;                        &lt;ImageView fitHeight=&quot;18&quot; fitWidth=&quot;18&quot; preserveRatio=&quot;true&quot;&gt;&#10;                            &lt;Image url=&quot;@../images/about-icon.png&quot; /&gt;&#10;                        &lt;/ImageView&gt;&#10;                    &lt;/graphic&gt;&#10;                &lt;/Button&gt;&#10;            &lt;/VBox&gt;&#10;&#10;            &lt;Region VBox.vgrow=&quot;ALWAYS&quot; /&gt;&#10;&#10;            &lt;VBox styleClass=&quot;signout-container&quot;&gt;&#10;                &lt;Button onAction=&quot;#handleSignOut&quot; styleClass=&quot;nav-signout&quot; text=&quot;Sign Out&quot;&gt;&#10;                    &lt;graphic&gt;&#10;                        &lt;ImageView fitHeight=&quot;18&quot; fitWidth=&quot;18&quot; preserveRatio=&quot;true&quot;&gt;&#10;                            &lt;Image url=&quot;@../images/signout-icon.png&quot; /&gt;&#10;                        &lt;/ImageView&gt;&#10;                    &lt;/graphic&gt;&#10;                &lt;/Button&gt;&#10;            &lt;/VBox&gt;&#10;        &lt;/VBox&gt;&#10;    &lt;/left&gt;&#10;&#10;    &lt;center&gt;&#10;        &lt;VBox alignment=&quot;TOP_CENTER&quot; minHeight=&quot;-Infinity&quot; minWidth=&quot;-Infinity&quot; prefHeight=&quot;600.0&quot; prefWidth=&quot;600.0&quot; spacing=&quot;15&quot; styleClass=&quot;reminder-root&quot;&gt;&#10;            &lt;!-- First Card: Medicine Information --&gt;&#10;            &lt;VBox fx:id=&quot;medicineCard&quot; alignment=&quot;TOP_LEFT&quot; prefHeight=&quot;600.0&quot; prefWidth=&quot;520.0&quot; spacing=&quot;12&quot; styleClass=&quot;medicine-info-card&quot;&gt;&#10;                &lt;padding&gt;&#10;                    &lt;Insets bottom=&quot;18&quot; left=&quot;30&quot; right=&quot;30&quot; top=&quot;18&quot; /&gt;&#10;                &lt;/padding&gt;&#10;&#10;                &lt;!-- Title --&gt;&#10;                &lt;Label styleClass=&quot;card-title&quot; text=&quot;Add Medicine Information&quot; /&gt;&#10;&#10;                &lt;!-- Name Field --&gt;&#10;                &lt;VBox spacing=&quot;3&quot;&gt;&#10;                    &lt;Label styleClass=&quot;field-label&quot; text=&quot;Name :&quot; /&gt;&#10;                    &lt;TextField fx:id=&quot;nameField&quot; prefHeight=&quot;28.0&quot; styleClass=&quot;medicine-field&quot; /&gt;&#10;                &lt;/VBox&gt;&#10;&#10;                &lt;!-- Start and End Date Fields (Side by Side) --&gt;&#10;                &lt;HBox alignment=&quot;CENTER_LEFT&quot; spacing=&quot;20&quot;&gt;&#10;                    &lt;VBox spacing=&quot;3&quot; HBox.hgrow=&quot;ALWAYS&quot;&gt;&#10;                        &lt;Label styleClass=&quot;field-label&quot; text=&quot;Start Date :&quot; /&gt;&#10;                        &lt;DatePicker fx:id=&quot;startDatePicker&quot; prefHeight=&quot;28.0&quot; styleClass=&quot;medicine-field&quot; /&gt;&#10;                    &lt;/VBox&gt;&#10;                    &lt;VBox spacing=&quot;3&quot; HBox.hgrow=&quot;ALWAYS&quot;&gt;&#10;                        &lt;Label styleClass=&quot;field-label&quot; text=&quot;End Date :&quot; /&gt;&#10;                        &lt;DatePicker fx:id=&quot;endDatePicker&quot; prefHeight=&quot;28.0&quot; styleClass=&quot;medicine-field&quot; /&gt;&#10;                    &lt;/VBox&gt;&#10;                &lt;/HBox&gt;&#10;&#10;                &lt;!-- Additional Information Field --&gt;&#10;                &lt;VBox spacing=&quot;3&quot;&gt;&#10;                    &lt;Label styleClass=&quot;field-label&quot; text=&quot;Additional Information :&quot; /&gt;&#10;                    &lt;TextField fx:id=&quot;noteField&quot; prefHeight=&quot;28.0&quot; styleClass=&quot;medicine-field&quot; /&gt;&#10;                &lt;/VBox&gt;&#10;            &lt;/VBox&gt;&#10;&#10;            &lt;!-- Second Card: Alert Time --&gt;&#10;            &lt;VBox fx:id=&quot;alertTimeCard&quot; alignment=&quot;TOP_CENTER&quot; minHeight=&quot;-Infinity&quot; minWidth=&quot;-Infinity&quot; prefHeight=&quot;200.0&quot; prefWidth=&quot;520.0&quot; spacing=&quot;8&quot; styleClass=&quot;alert-time-card&quot;&gt;&#10;                &lt;padding&gt;&#10;                    &lt;Insets bottom=&quot;15&quot; left=&quot;30&quot; right=&quot;30&quot; top=&quot;15&quot; /&gt;&#10;                &lt;/padding&gt;&#10;                &lt;HBox maxWidth=&quot;-Infinity&quot; minHeight=&quot;-Infinity&quot; minWidth=&quot;-Infinity&quot; prefHeight=&quot;90.0&quot; prefWidth=&quot;414.0&quot;&gt;&#10;                    &lt;children&gt;&#10;                        &lt;!-- Box behind Alert Time text with padding --&gt;&#10;                        &lt;VBox alignment=&quot;CENTER_LEFT&quot; prefHeight=&quot;38.0&quot; prefWidth=&quot;100.0&quot; style=&quot;-fx-background-color: #96CBB8; -fx-background-radius: 8;&quot;&gt;&#10;                            &lt;padding&gt;&#10;                                &lt;Insets top=&quot;6&quot; bottom=&quot;6&quot; left=&quot;12&quot; right=&quot;12&quot;/&gt;&#10;                            &lt;/padding&gt;&#10;                            &lt;Label prefHeight=&quot;38.0&quot; prefWidth=&quot;82.0&quot; styleClass=&quot;card-title&quot; text=&quot;Alert Time &quot; /&gt;&#10;                        &lt;/VBox&gt;&#10;&#10;                        &lt;!-- Time Display Area with existing times --&gt;&#10;                        &lt;VBox alignment=&quot;CENTER&quot; maxHeight=&quot;-Infinity&quot; maxWidth=&quot;-Infinity&quot; minHeight=&quot;39.0&quot; minWidth=&quot;-Infinity&quot; prefHeight=&quot;90.0&quot; prefWidth=&quot;333.0&quot; styleClass=&quot;times-display-section&quot;&gt;&#10;                            &lt;ScrollPane fitToHeight=&quot;true&quot; hbarPolicy=&quot;NEVER&quot; maxHeight=&quot;80.0&quot; prefHeight=&quot;80.0&quot; prefWidth=&quot;314.0&quot; styleClass=&quot;time-scroll-pane&quot; vbarPolicy=&quot;NEVER&quot; VBox.vgrow=&quot;ALWAYS&quot; style=&quot;-fx-padding: 0;&quot;&gt;&#10;                                &lt;HBox fx:id=&quot;timeListContainer&quot; spacing=&quot;6&quot; styleClass=&quot;time-pills-container&quot; /&gt;&#10;                            &lt;/ScrollPane&gt;&#10;                        &lt;/VBox&gt;&#10;                    &lt;/children&gt;&#10;                &lt;/HBox&gt;&#10;&#10;                &lt;!-- Time Selector --&gt;&#10;                &lt;HBox alignment=&quot;CENTER&quot; prefHeight=&quot;45.0&quot; prefWidth=&quot;459.0&quot; styleClass=&quot;time-selector-container&quot;&gt;&#10;                    &lt;!-- Hour:Minute Display with colons --&gt;&#10;                    &lt;HBox alignment=&quot;CENTER&quot; prefHeight=&quot;58.0&quot; prefWidth=&quot;250.0&quot; spacing=&quot;3&quot; styleClass=&quot;time-display-box&quot;&gt;&#10;                        &lt;Spinner fx:id=&quot;hourSpinner&quot; editable=&quot;true&quot; prefHeight=&quot;46.0&quot; prefWidth=&quot;100.0&quot; styleClass=&quot;time-number-spinner&quot; /&gt;&#10;                        &lt;Label styleClass=&quot;time-colon&quot; text=&quot;:&quot; /&gt;&#10;                        &lt;Spinner fx:id=&quot;minuteSpinner&quot; editable=&quot;true&quot; prefHeight=&quot;46.0&quot; prefWidth=&quot;100.0&quot; styleClass=&quot;time-number-spinner&quot; /&gt;&#10;                    &lt;/HBox&gt;&#10;&#10;                    &lt;!-- AM/PM Buttons --&gt;&#10;                    &lt;VBox alignment=&quot;CENTER&quot; spacing=&quot;2&quot;&gt;&#10;                        &lt;ToggleButton fx:id=&quot;amRadio&quot; prefHeight=&quot;26.0&quot; prefWidth=&quot;60.0&quot; styleClass=&quot;am-button&quot; text=&quot;AM&quot; /&gt;&#10;                        &lt;ToggleButton fx:id=&quot;pmRadio&quot; prefHeight=&quot;22.0&quot; prefWidth=&quot;60.0&quot; styleClass=&quot;pm-button&quot; text=&quot;PM&quot; /&gt;&#10;                    &lt;/VBox&gt;&#10;&#10;                    &lt;!-- Add/Remove Buttons --&gt;&#10;                    &lt;VBox alignment=&quot;CENTER&quot; spacing=&quot;2&quot;&gt;&#10;                        &lt;Button fx:id=&quot;addTimeButton&quot; onAction=&quot;#handleAddTime&quot; prefHeight=&quot;22.0&quot; prefWidth=&quot;90.0&quot; styleClass=&quot;add-time-btn&quot; text=&quot;Add&quot; /&gt;&#10;                        &lt;Button fx:id=&quot;removeTimeButton&quot; onAction=&quot;#handleRemoveTime&quot; prefHeight=&quot;22.0&quot; prefWidth=&quot;90.0&quot; styleClass=&quot;remove-time-btn&quot; text=&quot;Remove&quot; /&gt;&#10;                    &lt;/VBox&gt;&#10;                &lt;/HBox&gt;&#10;            &lt;/VBox&gt;&#10;&#10;            &lt;!-- Bottom Action Buttons (Outside of cards) --&gt;&#10;            &lt;HBox alignment=&quot;CENTER&quot; prefHeight=&quot;82.0&quot; prefWidth=&quot;520.0&quot; spacing=&quot;5.0&quot; styleClass=&quot;action-buttons-container&quot;&gt;&#10;                &lt;Button onAction=&quot;#handleCancel&quot; styleClass=&quot;cancel-button&quot; text=&quot;Cancel&quot; /&gt;&#10;                &lt;Button onAction=&quot;#handleSetReminder&quot; styleClass=&quot;set-reminder-button&quot; text=&quot;Set Reminder&quot; /&gt;&#10;            &lt;/HBox&gt;&#10;        &lt;/VBox&gt;&#10;    &lt;/center&gt;&#10;&lt;/BorderPane&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>